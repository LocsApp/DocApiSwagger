swagger: '2.0'
info:
  title: LocsApp API
  description: Api in development for LocsApp 
  version: 1.0.0
host: 127.0.0.1:8000
schemes:
  - http
basePath: /api/v1
produces:
  - application/json
paths:
  /api/v1/rest-auth/registration/:
    post:
      summary: Register an user
      description: |
        The register endponts returns information about the User.
        The response includde the User object and a http status code.
      parameters:
        - name: email
          in: body
          description: Email of the new user
          required: true
          type: string
        - name: username
          in: body
          description: Username of the new user
          required: true
          type: string
        - name: password1
          in: body
          description: Password of the new user
          required: true
          type: string
        - name: password2
          in: body
          description: Confirm password of the new user
          required: true
          type: string
      tags:
        - Users
        - Register
      responses:
        '200':
          description: Return only the statucs code
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /api/v1/rest-auth/login/ :
    post:
      summary: Register an user
      description: |
        The login endpoint returs a Token and an HTTP status code.
      parameters:
        - name: username
          in: body
          description: Username of the new user
          required: true
          type: string
        - name: password
          in: body
          description: Password of the new user
          required: true
          type: string
      tags:
        - Users
        - Login
      responses:
        '200':
          description: Return only the statucs code
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'    
  
  /api/v1/rest-auth/logout/:
    post:
      summary: Logout the connected User
      description: This endpoint lets you log out an user using his token
      tags:
        - User
        - Logout
        - Token
      responses:
        '200':
          description: 'A success message'
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'    
 
  /api/v1/rest-auth/user/:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
        - Token
      responses:
        '200':
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  User:
    type: object
    properties:
      email:
        type: Email
        description: Email of the user
      username:
        type: String
        description: Unique identifier for the user  
      password1:
        type: String
        description: Password of the user  
      password2:
        type: String
        description: Password of the user  
 
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
